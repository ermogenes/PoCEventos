version: '3'

networks:
  default:
    name: poceventos

volumes:
  mysql-data:
  zk-data:
  zk-logs:
  zk-secrets:
  broker01-data:
  broker01-secrets:
  broker02-data:
  broker02-secrets:
  broker03-data:
  broker03-secrets:
  registry-secrets:
  connect-data:
  connect-secrets:
  connect-kafka-secrets:
  ksqldb-extensions:
  nifi-data:
  nifi-extensions:
  nifi-conf:

services:

  mysql:
    container_name: poceventos_mysql
    image: mysql
    command: --default-authentication-plugin=mysql_native_password --init-file /db-init.sql
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - mysql-data:/var/lib/mysql    
      - type: bind
        source: ./data/mysql/PoCEventos-com-dados.sql
        target: /db-init.sql
    ports:
      - 3308:3306

  web:
    container_name: poceventos_web
    build:
      context: src/Web
    environment:
      ConnectionStrings__lojaConnectionString: 'server=mysql;port=3306;uid=root;pwd=root;database=loja'
      KafkaInfra__ksqlDbUrl: 'http://ksqldb:8088'
    ports:
      - 8888:80

  notificacao-worker:
    container_name: poceventos_notificacao-worker
    build:
      context: src/NotificacaoWorker
    environment:
      KafkaInfra__ksqlDbUrl: 'http://ksqldb:8088'
      KafkaInfra__SignalRHubUrl: 'http://web/notificacaoHub'

  zk:
    image: confluentinc/cp-zookeeper:6.2.4
    hostname: zk
    container_name: poceventos_zk
    ports:
      - 42181:2181
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_MAX_CLIENT_CNXNS: 0
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 5
      # ZOOKEEPER_SERVERS: zk:2888
    volumes:
      - zk-data:/var/lib/zookeeper/data
      - zk-logs:/var/lib/zookeeper/log
      - zk-secrets:/etc/zookeeper/secrets
    command:
      - /bin/bash
      - -c
      - |
        /etc/confluent/docker/run &
        sleep infinity
    restart: on-failure

  broker01:
    image: confluentinc/cp-kafka:6.2.4
    hostname: broker01
    container_name: poceventos_broker01
    ports:
      - 49092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zk:2181/kafka
      KAFKA_ADVERTISED_HOST_NAME: broker01
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker01:9092
      KAFKA_NUM_PARTITIONS: 8
      KAFKA_DEFAULTS_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_LOG_RETENTION_HOURS: 168 # 1 week
      KAFKA_LOG_SEGMENT_BYTES: 1073741824 # 1GB
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000 # 5 min
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 60000 # 1 min
      KAFKA_SCHEMA_REGISTRY_URL: http://registry:8081
    volumes:
      - broker01-data:/var/lib/kafka/data
      - broker01-secrets:/etc/kafka/secrets
    command:
      - /bin/bash
      - -c
      - |
        /etc/confluent/docker/run &
        sleep infinity
    depends_on:
      - zk
    restart: on-failure

  broker02:
    image: confluentinc/cp-kafka:6.2.4
    hostname: broker02
    container_name: poceventos_broker02
    ports:
      - 49093:9092
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zk:2181/kafka
      KAFKA_ADVERTISED_HOST_NAME: broker02
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker02:9092
      KAFKA_NUM_PARTITIONS: 8
      KAFKA_DEFAULTS_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_LOG_RETENTION_HOURS: 168 # 1 week
      KAFKA_LOG_SEGMENT_BYTES: 1073741824 # 1GB
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000 # 5 min
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 60000 # 1 min
      KAFKA_SCHEMA_REGISTRY_URL: http://registry:8081
    volumes:
      - broker02-data:/var/lib/kafka/data
      - broker02-secrets:/etc/kafka/secrets
    command:
      - /bin/bash
      - -c
      - |
        /etc/confluent/docker/run &
        sleep infinity
    depends_on:
      - zk
    restart: on-failure

  broker03:
    image: confluentinc/cp-kafka:6.2.4
    hostname: broker03
    container_name: poceventos_broker03
    ports:
      - 49094:9092
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zk:2181/kafka
      KAFKA_ADVERTISED_HOST_NAME: broker03
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker03:9092
      KAFKA_NUM_PARTITIONS: 8
      KAFKA_DEFAULTS_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_LOG_RETENTION_HOURS: 168 # 1 week
      KAFKA_LOG_SEGMENT_BYTES: 1073741824 # 1GB
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000 # 5 min
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 60000 # 1 min
      KAFKA_SCHEMA_REGISTRY_URL: http://registry:8081
    volumes:
      - broker03-data:/var/lib/kafka/data
      - broker03-secrets:/etc/kafka/secrets
    command:
      - /bin/bash
      - -c
      - |
        /etc/confluent/docker/run &
        sleep infinity
    depends_on:
      - zk
    restart: on-failure

  cmak:
    image: vimagick/cmak
    hostname: cmak
    container_name: poceventos_cmak
    ports:
      - 49000:9000 # Cluster Zookeeper Hosts: "zk:2181/kafka"
    environment:
      ZK_HOSTS: zk:2181
      KAFKA_MANAGER_AUTH_ENABLED: "false"
    depends_on:
      - broker01
      - broker02
      - broker03
    healthcheck:
      test: curl -f http://cmak:9000/api/health || exit 1
    restart: unless-stopped

  registry:
    image: confluentinc/cp-schema-registry:6.2.4
    hostname: registry
    container_name: poceventos_registry
    ports:
      - 48081:8081
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker01:9092,broker02:9092,broker03:9092
      SCHEMA_REGISTRY_HOST_NAME: registry
      SCHEMA_REGISTRY_LISTENERS: http://registry:8081
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_METHODS: "GET,POST,PUT,OPTIONS"
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN: "*"
    volumes:
      - registry-secrets:/etc/schema-registry/secrets
    command:
      - /bin/bash
      - -c
      - |
        /etc/confluent/docker/run &
        sleep infinity
    depends_on:
      - broker01
      - broker02
      - broker03
    restart: on-failure

  registry-ui:
    image: landoop/schema-registry-ui:latest
    hostname: registry-ui
    container_name: poceventos_registry-ui
    environment:
      SCHEMAREGISTRY_URL: http://registry:8081 # ui supports just one registry
      PROXY: "true"
    ports:
      - 48001:8000
    depends_on:
      - registry
    restart: unless-stopped

  restproxy:
    image: confluentinc/cp-kafka-rest:6.2.4
    hostname: restproxy
    container_name: poceventos_restproxy
    ports:
      - 48082:8082
    environment:
      KAFKA_REST_ID: 1
      KAFKA_REST_BOOTSTRAP_SERVERS: broker01:9092,broker02:9092,broker03:9092
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      KAFKA_REST_HOST_NAME: restproxy
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://registry:8081
      KAFKA_REST_ACCESS_CONTROL_ALLOW_METHODS: "GET,POST,PUT,DELETE,OPTIONS"
      KAFKA_REST_ACCESS_CONTROL_ALLOW_ORIGIN: "*"
      KAFKA_REST_ACKS: all
    command:
      - /bin/bash
      - -c
      - |
        /etc/confluent/docker/run &
        sleep infinity
    depends_on:
      - broker01
      - broker02
      - broker03
      - registry
    restart: on-failure

  kafka-topics-ui:
    image: landoop/kafka-topics-ui:latest
    hostname: kafka-topics-ui
    container_name: poceventos_kafka-topics-ui
    environment:
      KAFKA_REST_PROXY_URL: http://restproxy:8082
      PROXY: "true"
      MAX_BYTES: 50000 # 50KB max fetch amount per topic
      RECORD_POLL_TIMEOUT: 5000 # ms
      DEBUG_LOGS_ENABLED: "true"
      LAZY_LOAD_TOPIC_META: "false"
    ports:
      - 48000:8000
    depends_on:
      - broker01
      - broker02
      - broker03
      - restproxy
    restart: unless-stopped

  connect:
    image: confluentinc/cp-kafka-connect:6.2.4
    hostname: connect
    container_name: poceventos_connect
    ports:
      - 48083:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: broker01:9092,broker02:9092,broker03:9092
      CONNECT_REST_PORT: 8083
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_CLIENT_ID: connect
      CONNECT_GROUP_ID: connect-group
      CONNECT_SCHEMA_REGISTRY_URL: http://registry:8081
      CONNECT_CONFIG_STORAGE_TOPIC: _connect-config
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_CONFIG_STORAGE_MIN_INSYNC_REPLICAS: 2
      CONNECT_OFFSET_STORAGE_TOPIC: _connect-offset
      CONNECT_OFFSET_STORAGE_PARTITIONS: 8
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_MIN_INSYNC_REPLICAS: 2
      CONNECT_STATUS_STORAGE_TOPIC: _connect-status
      CONNECT_STATUS_STORAGE_PARTITIONS: 8
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_MIN_INSYNC_REPLICAS: 2
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://registry:8081
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://registry:8081
      CONNECT_ACCESS_CONTROL_ALLOW_METHODS: "GET,POST,PUT,DELETE,OPTIONS"
      CONNECT_ACCESS_CONTROL_ALLOW_ORIGIN: "*"
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components,/data/connect-jars
    volumes:
      - connect-data:/var/lib/kafka/data
      - connect-secrets:/etc/kafka/secrets
      - connect-kafka-secrets:/etc/kafka-connect/secrets
    command:
      - /bin/bash
      - -c
      - |
        echo "---- Installing connectors from Confluent Hub... (/usr/share/confluent-hub-components)"
        # confluent-hub install --no-prompt castorm/kafka-connect-http:0.8.6
        # confluent-hub install --no-prompt dariobalinzo/kafka-connect-elasticsearch-source:1.3
        # confluent-hub install --no-prompt confluentinc/kafka-connect-elasticsearch:11.1.0
        # confluent-hub install --no-prompt mongodb/kafka-connect-mongodb:1.6.1
        # confluent-hub install --no-prompt jcustenborder/kafka-connect-transform-common:0.1.0.54
        confluent-hub install --no-prompt mdrogalis/voluble:0.3.1
        confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:10.2.1
        echo "---- Installing JDBC drivers... (/usr/share/java/jdbc ~> /usr/share/confluent-hub-components/confluentinc-kafka-connect-jdbc/lib)"
        mkdir -p /usr/share/java/jdbc/mysql && curl -LsS https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-8.0.26.tar.gz | tar xvz -C /usr/share/java/jdbc/mysql --wildcards '*.jar'
        mkdir -p /usr/share/java/jdbc/mssql && curl -LsS https://go.microsoft.com/fwlink/?linkid=2168494 | tar xvz -C /usr/share/java/jdbc/mssql --wildcards '*.jar'
        cp -l $$(du -a /usr/share/java/jdbc/ | awk '{print $$2}' | grep .jar) /usr/share/confluent-hub-components/confluentinc-kafka-connect-jdbc/lib
        /etc/confluent/docker/run &
        sleep infinity
    depends_on:
      - broker01
      - broker02
      - broker03
      - registry
    restart: on-failure

  connect-ui:
    image: landoop/kafka-connect-ui:latest
    hostname: connect-ui
    container_name: poceventos_connect-ui
    ports:
      - 48100:8000
    environment:
      CONNECT_URL: http://connect:8083;connect-group-connect
      PROXY: "true"
      KAFKA_TOPICS_UI: "http://localhost:4800"
      KAFKA_TOPICS_UI_ENABLED: "true"
    depends_on:
      - connect
    restart: unless-stopped

  ksqldb:
    image: confluentinc/cp-ksqldb-server:6.2.4
    hostname: ksqldb
    container_name: poceventos_ksqldb
    ports:
      - 48088:8088
      - 48283:8083
    environment:
      KSQL_KSQL_SERVICE_ID: service01
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: broker01:9092,broker02:9092,broker03:9092
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://registry:8081
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
      KSQL_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KSQL_KSQL_HEARTBEAT_ENABLE: "true" # /clusterStatus
      KSQL_KSQL_EXTENSION_DIR: /opt/confluent/ksql/extensions
      KSQL_KSQL_CONNECT_URL: http://connect:8083
    volumes:
      - ksqldb-extensions:/opt/confluent/ksql/extensions
    command:
      - /bin/bash
      - -c
      - |
        /etc/confluent/docker/run &
        sleep infinity
    depends_on:
      - broker01
      - broker02
      - broker03
      - registry
      - connect
    restart: on-failure

  ksqldb-cli:
    image: confluentinc/cp-ksqldb-cli:6.2.4
    hostname: ksqldb-cli
    container_name: poceventos_ksqldb-cli
    # docker-compose exec ksqldb-cli ksql http://ksqldb:8088
    depends_on:
      - ksqldb
    entrypoint: /bin/sh
    tty: true
    restart: unless-stopped

  nifi:
    image: apache/nifi:latest
    hostname: nifi
    container_name: poceventos_nifi
    ports:
      - 48443:8443
      - 49443:9443
    dns:
      - 8.8.8.8
      - 8.8.4.4
    environment:
      NIFI_WEB_HTTP_PORT: 8443
      NIFI_WEB_HTTPS_PORT: 9443
      # NIFI_CLUSTER_IS_NODE: "true"
      # NIFI_CLUSTER_NODE_PROTOCOL_PORT: 8082
      # NIFI_ZK_CONNECT_STRING: zk:2181
      # NIFI_ELECTION_MAX_WAIT: "1 min"
    volumes:
        - nifi-data:/opt/nifi/nifi-current/
        - nifi-extensions:/opt/nifi/nifi-current/extensions
        - nifi-conf:/opt/nifi/nifi-current/conf
    command:
      - /bin/bash
      - -c
      - |
        echo "nameserver 8.8.8.8" >> /etc/resolv.conf &
        echo "nameserver 8.8.4.4" >> /etc/resolv.conf &
        /etc/confluent/docker/run &
        sleep infinity
    restart: always
